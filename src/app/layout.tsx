import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { Header } from '@/widgets/Header';
import { MessageProvider } from '@/config/providers/MessageProvider';
import AuthProvider from '@/config/providers/AuthProvider';
import { cookies } from 'next/headers';
import { getUser } from '@/entities/utils/getUser';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const token = cookieStore.get('token')?.value || null;
  const user = getUser(token);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <MessageProvider>
          <AuthProvider token={token} user={user}>
            <Header />
            {children}
          </AuthProvider>
        </MessageProvider>
      </body>
    </html>
  );
}
